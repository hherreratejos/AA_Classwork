class Array

    def my_each(&prc)
        i = 0
        while i < self.length
            prc.call(self[i])
            i += 1
        end
        self
    end

    def my_select(&prc)
        selected = []
        self.my_each do |ele|
            selected << ele if prc.call(ele)           
        end
        selected
    end

    def my_reject(&prc)
        not_rejected = []
        self.my_each do |ele|
            not_rejected << ele if !prc.call(ele)
        end
        not_rejected
    end

    def my_any?(&prc)
        self.my_each do |ele|
            return true if prc.call(ele)
        end
        false
    end

    def my_all?(&prc)
        self.my_each do |ele|
            return false if !prc.call(ele)
        end
        true
    end

    def my_flatten
        flatten = []
        self.my_each do |ele|
            if ele.is_a? Array
                ele.my_flatten
            else
                flatten << ele
            end
        end
        flatten
    end

end


p [1, 2, 3, [4, [5, 6]], [[[7]], 8]].my_flatten
